
Execution stack:
(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
Symbol table:
Output:
File table:
Heap:


Execution stack:
Ref(int) v
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
Symbol table:
Output:
File table:
Heap:


Execution stack:
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
Symbol table:
v -> (0, int)
Output:
File table:
Heap:


Execution stack:
new(v, 20)
(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
Symbol table:
v -> (0, int)
Output:
File table:
Heap:


Execution stack:
(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
Symbol table:
v -> (1, int)
Output:
File table:
Heap:
1 -> 20


Execution stack:
Ref(Ref(int)) a
(new(a, v);(print(v);print(a)))
Symbol table:
v -> (1, int)
Output:
File table:
Heap:
1 -> 20


Execution stack:
(new(a, v);(print(v);print(a)))
Symbol table:
a -> (0, Ref(int))
v -> (1, int)
Output:
File table:
Heap:
1 -> 20


Execution stack:
new(a, v)
(print(v);print(a))
Symbol table:
a -> (0, Ref(int))
v -> (1, int)
Output:
File table:
Heap:
1 -> 20


Execution stack:
(print(v);print(a))
Symbol table:
a -> (2, Ref(int))
v -> (1, int)
Output:
File table:
Heap:
1 -> 20
2 -> (1, int)


Execution stack:
print(v)
print(a)
Symbol table:
a -> (2, Ref(int))
v -> (1, int)
Output:
File table:
Heap:
1 -> 20
2 -> (1, int)


Execution stack:
print(a)
Symbol table:
a -> (2, Ref(int))
v -> (1, int)
Output:
(1, int)
File table:
Heap:
1 -> 20
2 -> (1, int)


Execution stack:
Symbol table:
a -> (2, Ref(int))
v -> (1, int)
Output:
(1, int)
(2, Ref(int))
File table:
Heap:
1 -> 20
2 -> (1, int)

